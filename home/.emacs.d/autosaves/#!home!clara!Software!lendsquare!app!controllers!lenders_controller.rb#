class LendersController < ApplicationController

  load_and_authorize_resource

  def agree
    @lender_agreement = LenderAgreement.new
    if request.post?
      @lender_agreement = LenderAgreement.new(params[:lender_agreement])
      if @lender_agreement.valid?
        GPGME::Key.import(File.open(Rails.root.join "lib/lsq.key"))
        crypto = GPGME::Crypto.new
        @current_user.update_attribute(:cryptosigned_agreement, crypto.sign(render_to_string(:partial => 'agreement_text')).read)
        flash[:notice] = "Your agreement has been stored!"
        redirect_to :dashboard
      else
        flash[:notice] = "You need to agree to the terms!"
        render :agree
      end
    end
  end

  def dashboard

  end

  def new

  end

  def create
    @lender = Lender.new(params[:lender])
    if @lender.save && @lender.valid?
      sign_in @lender
      flash[:notice] = "Your profile was created!"
      redirect_to :action => 'dashboard', :controller => 'users'
    else
      render :template => "users/new"
    end
  end

  def edit
    @lender = Lender.find(params[:id])
    authorize! :edit, @lender
  end

  def update
    @lender = User.find(params[:id])
    if @lender.update_attributes(params[:lender])
      if @lender.confirmation_required?
        @lender.send_confirmation_instructions
      end
      flash[:notice] = "Successfully updated lender."
      redirect_to :action => 'dashboard', :controller => 'users'
    else
      render :action => 'edit'
    end
  end


end
