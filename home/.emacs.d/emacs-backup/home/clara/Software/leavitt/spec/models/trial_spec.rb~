require 'spec_helper'

describe Trial do
  it "has a valid factory" do 
    FactoryGirl.create(:trial).should be_valid
  end

  it "can generate shapes" do
    FactoryGirl.create(:trial).generate_shapes(FactoryGirl.create(:position))
  end

  it "can generate turn order and move turns" do
    t = FactoryGirl.create(:trial)
    t.generate_turn_order
    to = t.turn_order
    to.should_not be_empty
    expect {t.next_persons_turn}.to change(t, :whose_turn_is_it)
  end

  it "has positions" do
    FactoryGirl.create(:trial).positions.should_not be_empty
  end

  it "can generate positions" do
    FactoryGirl.create(:trial).generate_position.should be_a Position
  end

  it "collects messages" do
    p1 = FactoryGirl.create(:position)
    p2 = FactoryGirl.create(:position)
    t = FactoryGirl.create(:trial)
    t.generate_turn_order
    m = FactoryGirl.create(:message, :from_position => p1, :to_position => p2, :trial => t)
    messages = t.conversation_between(p1, p2)
    messages.should be_a Array
    messages.should include m
  end

  it "tells you if enough positions are chosen" do
    FactoryGirl.create(:trial).enough_positions_chosen?
  end

  it "has a began at and ended at" do
    t = FactoryGirl.create(:trial)
    t.began_at
    t.ended_at
  end
  
end
